{"ast":null,"code":"import _classCallCheck from \"/Users/frida/teamdagarna/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/frida/teamdagarna/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Injectable, Inject, Optional, InjectionToken, NgZone, PLATFORM_ID } from '@angular/core';\nimport { createStorageRef } from './ref';\nimport { _firebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\nexport var StorageBucket = /*#__PURE__*/new InjectionToken('angularfire2.storageBucket');\nexport var BUCKET = StorageBucket;\nvar AngularFireStorage = /*#__PURE__*/(function () {\n  var AngularFireStorage = /*#__PURE__*/function () {\n    function AngularFireStorage(options, nameOrConfig, storageBucket, platformId, zone) {\n      _classCallCheck(this, AngularFireStorage);\n\n      this.schedulers = new ɵAngularFireSchedulers(zone);\n      this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n      this.storage = zone.runOutsideAngular(function () {\n        var app = _firebaseAppFactory(options, zone, nameOrConfig);\n\n        return app.storage(storageBucket || undefined);\n      });\n    }\n\n    _createClass(AngularFireStorage, [{\n      key: \"ref\",\n      value: function ref(path) {\n        return createStorageRef(this.storage.ref(path), this.schedulers, this.keepUnstableUntilFirst);\n      }\n    }, {\n      key: \"upload\",\n      value: function upload(path, data, metadata) {\n        var storageRef = this.storage.ref(path);\n        var ref = createStorageRef(storageRef, this.schedulers, this.keepUnstableUntilFirst);\n        return ref.put(data, metadata);\n      }\n    }]);\n\n    return AngularFireStorage;\n  }();\n\n  AngularFireStorage.ɵfac = function AngularFireStorage_Factory(t) {\n    return new (t || AngularFireStorage)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(BUCKET, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  AngularFireStorage.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: AngularFireStorage,\n    factory: function factory(t) {\n      return AngularFireStorage.ɵfac(t);\n    }\n  });\n  AngularFireStorage = __decorate([__param(0, Inject(FIREBASE_OPTIONS)), __param(1, Optional()), __param(1, Inject(FIREBASE_APP_NAME)), __param(2, Optional()), __param(2, Inject(BUCKET)), __param(3, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [Object, Object, Object, Object, NgZone])], AngularFireStorage);\n  return AngularFireStorage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nexport { AngularFireStorage }; //# sourceMappingURL=storage.js.map","map":null,"metadata":{},"sourceType":"module"}