{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './date-time-picker-intl.service';\nimport * as ɵngcc2 from './adapter/date-time-adapter.class';\nimport * as ɵngcc3 from './calendar-body.component';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, Optional, Output, ViewChild } from '@angular/core';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nexport var YEARS_PER_ROW = 3;\nexport var YEAR_ROWS = 7;\n\nvar OwlMultiYearViewComponent = function () {\n  function OwlMultiYearViewComponent(cdRef, pickerIntl, dateTimeAdapter) {\n    this.cdRef = cdRef;\n    this.pickerIntl = pickerIntl;\n    this.dateTimeAdapter = dateTimeAdapter;\n    this._selectMode = 'single';\n    this._selecteds = [];\n    this.initiated = false;\n    this.change = new EventEmitter();\n    this.yearSelected = new EventEmitter();\n    this.pickerMomentChange = new EventEmitter();\n    this.keyboardEnter = new EventEmitter();\n  }\n\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"selectMode\", {\n    get: function get() {\n      return this._selectMode;\n    },\n    set: function set(val) {\n      this._selectMode = val;\n\n      if (this.initiated) {\n        this.setSelectedYears();\n        this.cdRef.markForCheck();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"selected\", {\n    get: function get() {\n      return this._selected;\n    },\n    set: function set(value) {\n      var oldSelected = this._selected;\n      value = this.dateTimeAdapter.deserialize(value);\n      this._selected = this.getValidDate(value);\n\n      if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\n        this.setSelectedYears();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"selecteds\", {\n    get: function get() {\n      return this._selecteds;\n    },\n    set: function set(values) {\n      var _this = this;\n\n      this._selecteds = values.map(function (v) {\n        v = _this.dateTimeAdapter.deserialize(v);\n        return _this.getValidDate(v);\n      });\n      this.setSelectedYears();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"pickerMoment\", {\n    get: function get() {\n      return this._pickerMoment;\n    },\n    set: function set(value) {\n      var oldMoment = this._pickerMoment;\n      value = this.dateTimeAdapter.deserialize(value);\n      this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n\n      if (oldMoment && this._pickerMoment && !this.isSameYearList(oldMoment, this._pickerMoment)) {\n        this.generateYearList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"dateFilter\", {\n    get: function get() {\n      return this._dateFilter;\n    },\n    set: function set(filter) {\n      this._dateFilter = filter;\n\n      if (this.initiated) {\n        this.generateYearList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"minDate\", {\n    get: function get() {\n      return this._minDate;\n    },\n    set: function set(value) {\n      value = this.dateTimeAdapter.deserialize(value);\n      this._minDate = this.getValidDate(value);\n\n      if (this.initiated) {\n        this.generateYearList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"maxDate\", {\n    get: function get() {\n      return this._maxDate;\n    },\n    set: function set(value) {\n      value = this.dateTimeAdapter.deserialize(value);\n      this._maxDate = this.getValidDate(value);\n\n      if (this.initiated) {\n        this.generateYearList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"todayYear\", {\n    get: function get() {\n      return this._todayYear;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"years\", {\n    get: function get() {\n      return this._years;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"selectedYears\", {\n    get: function get() {\n      return this._selectedYears;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"isInSingleMode\", {\n    get: function get() {\n      return this.selectMode === 'single';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"isInRangeMode\", {\n    get: function get() {\n      return this.selectMode === 'range' || this.selectMode === 'rangeFrom' || this.selectMode === 'rangeTo';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"activeCell\", {\n    get: function get() {\n      if (this._pickerMoment) {\n        return this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"tableHeader\", {\n    get: function get() {\n      if (this._years && this._years.length > 0) {\n        return this._years[0][0].displayValue + \" ~ \" + this._years[YEAR_ROWS - 1][YEARS_PER_ROW - 1].displayValue;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"prevButtonLabel\", {\n    get: function get() {\n      return this.pickerIntl.prevMultiYearLabel;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"nextButtonLabel\", {\n    get: function get() {\n      return this.pickerIntl.nextMultiYearLabel;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"owlDTCalendarView\", {\n    get: function get() {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMultiYearViewComponent.prototype, \"owlDTCalendarMultiYearView\", {\n    get: function get() {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OwlMultiYearViewComponent.prototype.ngOnInit = function () {};\n\n  OwlMultiYearViewComponent.prototype.ngAfterContentInit = function () {\n    this._todayYear = this.dateTimeAdapter.getYear(this.dateTimeAdapter.now());\n    this.generateYearList();\n    this.initiated = true;\n  };\n\n  OwlMultiYearViewComponent.prototype.selectCalendarCell = function (cell) {\n    this.selectYear(cell.value);\n  };\n\n  OwlMultiYearViewComponent.prototype.selectYear = function (year) {\n    this.yearSelected.emit(this.dateTimeAdapter.createDate(year, 0, 1));\n    var firstDateOfMonth = this.dateTimeAdapter.createDate(year, this.dateTimeAdapter.getMonth(this.pickerMoment), 1);\n    var daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n    var selected = this.dateTimeAdapter.createDate(year, this.dateTimeAdapter.getMonth(this.pickerMoment), Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)), this.dateTimeAdapter.getHours(this.pickerMoment), this.dateTimeAdapter.getMinutes(this.pickerMoment), this.dateTimeAdapter.getSeconds(this.pickerMoment));\n    this.change.emit(selected);\n  };\n\n  OwlMultiYearViewComponent.prototype.prevYearList = function (event) {\n    this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1 * YEAR_ROWS * YEARS_PER_ROW);\n    this.generateYearList();\n    event.preventDefault();\n  };\n\n  OwlMultiYearViewComponent.prototype.nextYearList = function (event) {\n    this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, YEAR_ROWS * YEARS_PER_ROW);\n    this.generateYearList();\n    event.preventDefault();\n  };\n\n  OwlMultiYearViewComponent.prototype.generateYearList = function () {\n    this._years = [];\n    var pickerMomentYear = this.dateTimeAdapter.getYear(this._pickerMoment);\n    var offset = pickerMomentYear % (YEARS_PER_ROW * YEAR_ROWS);\n\n    for (var i = 0; i < YEAR_ROWS; i++) {\n      var row = [];\n\n      for (var j = 0; j < YEARS_PER_ROW; j++) {\n        var year = pickerMomentYear - offset + (j + i * YEARS_PER_ROW);\n        var yearCell = this.createYearCell(year);\n        row.push(yearCell);\n      }\n\n      this._years.push(row);\n    }\n\n    return;\n  };\n\n  OwlMultiYearViewComponent.prototype.previousEnabled = function () {\n    if (!this.minDate) {\n      return true;\n    }\n\n    return !this.minDate || !this.isSameYearList(this._pickerMoment, this.minDate);\n  };\n\n  OwlMultiYearViewComponent.prototype.nextEnabled = function () {\n    return !this.maxDate || !this.isSameYearList(this._pickerMoment, this.maxDate);\n  };\n\n  OwlMultiYearViewComponent.prototype.handleCalendarKeydown = function (event) {\n    var moment;\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case RIGHT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case UP_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1 * YEARS_PER_ROW);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case DOWN_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, YEARS_PER_ROW);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case HOME:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS));\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case END:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, YEARS_PER_ROW * YEAR_ROWS - this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS) - 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case PAGE_UP:\n        moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 * (YEARS_PER_ROW * YEAR_ROWS) : -1 * (YEARS_PER_ROW * YEAR_ROWS));\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case PAGE_DOWN:\n        moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 * (YEARS_PER_ROW * YEAR_ROWS) : YEARS_PER_ROW * YEAR_ROWS);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case ENTER:\n        this.selectYear(this.dateTimeAdapter.getYear(this._pickerMoment));\n        this.keyboardEnter.emit();\n        break;\n\n      default:\n        return;\n    }\n\n    this.focusActiveCell();\n    event.preventDefault();\n  };\n\n  OwlMultiYearViewComponent.prototype.createYearCell = function (year) {\n    var startDateOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n    var ariaLabel = this.dateTimeAdapter.getYearName(startDateOfYear);\n    var cellClass = 'owl-dt-year-' + year;\n    return new CalendarCell(year, year.toString(), ariaLabel, this.isYearEnabled(year), false, cellClass);\n  };\n\n  OwlMultiYearViewComponent.prototype.setSelectedYears = function () {\n    var _this = this;\n\n    this._selectedYears = [];\n\n    if (this.isInSingleMode && this.selected) {\n      this._selectedYears[0] = this.dateTimeAdapter.getYear(this.selected);\n    }\n\n    if (this.isInRangeMode && this.selecteds) {\n      this._selectedYears = this.selecteds.map(function (selected) {\n        if (_this.dateTimeAdapter.isValid(selected)) {\n          return _this.dateTimeAdapter.getYear(selected);\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n  OwlMultiYearViewComponent.prototype.isYearEnabled = function (year) {\n    if (year === undefined || year === null || this.maxDate && year > this.dateTimeAdapter.getYear(this.maxDate) || this.minDate && year < this.dateTimeAdapter.getYear(this.minDate)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    var firstOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n\n    for (var date = firstOfYear; this.dateTimeAdapter.getYear(date) == year; date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  OwlMultiYearViewComponent.prototype.isSameYearList = function (date1, date2) {\n    return Math.floor(this.dateTimeAdapter.getYear(date1) / (YEARS_PER_ROW * YEAR_ROWS)) === Math.floor(this.dateTimeAdapter.getYear(date2) / (YEARS_PER_ROW * YEAR_ROWS));\n  };\n\n  OwlMultiYearViewComponent.prototype.getValidDate = function (obj) {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj) ? obj : null;\n  };\n\n  OwlMultiYearViewComponent.prototype.focusActiveCell = function () {\n    this.calendarBodyElm.focusActiveCell();\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], OwlMultiYearViewComponent.prototype, \"selectMode\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMultiYearViewComponent.prototype, \"selected\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], OwlMultiYearViewComponent.prototype, \"selecteds\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMultiYearViewComponent.prototype, \"pickerMoment\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], OwlMultiYearViewComponent.prototype, \"dateFilter\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMultiYearViewComponent.prototype, \"minDate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMultiYearViewComponent.prototype, \"maxDate\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], OwlMultiYearViewComponent.prototype, \"change\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], OwlMultiYearViewComponent.prototype, \"yearSelected\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], OwlMultiYearViewComponent.prototype, \"pickerMomentChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], OwlMultiYearViewComponent.prototype, \"keyboardEnter\", void 0);\n\n  __decorate([ViewChild(OwlCalendarBodyComponent), __metadata(\"design:type\", OwlCalendarBodyComponent)], OwlMultiYearViewComponent.prototype, \"calendarBodyElm\", void 0);\n\n  __decorate([HostBinding('class.owl-dt-calendar-view'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], OwlMultiYearViewComponent.prototype, \"owlDTCalendarView\", null);\n\n  __decorate([HostBinding('class.owl-dt-calendar-multi-year-view'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], OwlMultiYearViewComponent.prototype, \"owlDTCalendarMultiYearView\", null);\n\n  OwlMultiYearViewComponent = __decorate([__param(2, Optional()), __metadata(\"design:paramtypes\", [ChangeDetectorRef, OwlDateTimeIntl, DateTimeAdapter])], OwlMultiYearViewComponent);\n\n  OwlMultiYearViewComponent.ɵfac = function OwlMultiYearViewComponent_Factory(t) {\n    return new (t || OwlMultiYearViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.OwlDateTimeIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateTimeAdapter, 8));\n  };\n\n  OwlMultiYearViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: OwlMultiYearViewComponent,\n    selectors: [[\"owl-date-time-multi-year-view\"]],\n    viewQuery: function OwlMultiYearViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(OwlCalendarBodyComponent, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.calendarBodyElm = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function OwlMultiYearViewComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"owl-dt-calendar-view\", ctx.owlDTCalendarView)(\"owl-dt-calendar-multi-year-view\", ctx.owlDTCalendarMultiYearView);\n      }\n    },\n    inputs: {\n      selectMode: \"selectMode\",\n      selected: \"selected\",\n      selecteds: \"selecteds\",\n      pickerMoment: \"pickerMoment\",\n      dateFilter: \"dateFilter\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\"\n    },\n    outputs: {\n      change: \"change\",\n      yearSelected: \"yearSelected\",\n      pickerMomentChange: \"pickerMomentChange\",\n      keyboardEnter: \"keyboardEnter\"\n    },\n    decls: 14,\n    vars: 12,\n    consts: [[\"type\", \"button\", \"tabindex\", \"0\", 1, \"owl-dt-control-button\", \"owl-dt-control-arrow-button\", 3, \"disabled\", \"click\"], [\"tabindex\", \"-1\", 1, \"owl-dt-control-button-content\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"version\", \"1.1\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 250.738 250.738\", 0, \"xml\", \"space\", \"preserve\", \"width\", \"100%\", \"height\", \"100%\", 2, \"enable-background\", \"new 0 0 250.738 250.738\"], [\"d\", \"M96.633,125.369l95.053-94.533c7.101-7.055,7.101-18.492,0-25.546   c-7.1-7.054-18.613-7.054-25.714,0L58.989,111.689c-3.784,3.759-5.487,8.759-5.238,13.68c-0.249,4.922,1.454,9.921,5.238,13.681   l106.983,106.398c7.101,7.055,18.613,7.055,25.714,0c7.101-7.054,7.101-18.491,0-25.544L96.633,125.369z\", 2, \"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\"], [1, \"owl-dt-calendar-table\", \"owl-dt-calendar-multi-year-table\"], [1, \"owl-dt-calendar-header\"], [\"colspan\", \"3\"], [\"owl-date-time-calendar-body\", \"\", \"role\", \"grid\", 3, \"rows\", \"numCols\", \"cellRatio\", \"activeCell\", \"todayValue\", \"selectedValues\", \"selectMode\", \"keydown\", \"select\"], [\"version\", \"1.1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 250.738 250.738\", 0, \"xml\", \"space\", \"preserve\", 2, \"enable-background\", \"new 0 0 250.738 250.738\"], [\"d\", \"M191.75,111.689L84.766,5.291c-7.1-7.055-18.613-7.055-25.713,0\\n                c-7.101,7.054-7.101,18.49,0,25.544l95.053,94.534l-95.053,94.533c-7.101,7.054-7.101,18.491,0,25.545\\n                c7.1,7.054,18.613,7.054,25.713,0L191.75,139.05c3.784-3.759,5.487-8.759,5.238-13.681\\n                C197.237,120.447,195.534,115.448,191.75,111.689z\", 2, \"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\"]],\n    template: function OwlMultiYearViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function OwlMultiYearViewComponent_Template_button_click_0_listener($event) {\n          return ctx.prevYearList($event);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(2, \"svg\", 2);\n        ɵngcc0.ɵɵelement(3, \"path\", 3);\n        ɵngcc0.ɵɵelementEnd()()();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(4, \"table\", 4)(5, \"thead\", 5)(6, \"tr\")(7, \"th\", 6);\n        ɵngcc0.ɵɵtext(8);\n        ɵngcc0.ɵɵelementEnd()()();\n        ɵngcc0.ɵɵelementStart(9, \"tbody\", 7);\n        ɵngcc0.ɵɵlistener(\"keydown\", function OwlMultiYearViewComponent_Template_tbody_keydown_9_listener($event) {\n          return ctx.handleCalendarKeydown($event);\n        })(\"select\", function OwlMultiYearViewComponent_Template_tbody_select_9_listener($event) {\n          return ctx.selectCalendarCell($event);\n        });\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function OwlMultiYearViewComponent_Template_button_click_10_listener($event) {\n          return ctx.nextYearList($event);\n        });\n        ɵngcc0.ɵɵelementStart(11, \"span\", 1);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(12, \"svg\", 8);\n        ɵngcc0.ɵɵelement(13, \"path\", 9);\n        ɵngcc0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(8);\n        ɵngcc0.ɵɵtextInterpolate(ctx.tableHeader);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx.years)(\"numCols\", 3)(\"cellRatio\", 3 / 7)(\"activeCell\", ctx.activeCell)(\"todayValue\", ctx.todayYear)(\"selectedValues\", ctx.selectedYears)(\"selectMode\", ctx.selectMode);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n      }\n    },\n    directives: [ɵngcc3.OwlCalendarBodyComponent],\n    styles: [\"\"],\n    changeDetection: 0\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return OwlMultiYearViewComponent;\n}();\n\nexport { OwlMultiYearViewComponent }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}