{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './adapter/date-time-adapter.class';\nimport * as ɵngcc2 from './calendar-body.component';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Inject, Input, Optional, Output, ViewChild } from '@angular/core';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nvar MONTHS_PER_YEAR = 12;\nvar MONTHS_PER_ROW = 3;\n\nvar OwlYearViewComponent = function () {\n  function OwlYearViewComponent(cdRef, dateTimeAdapter, dateTimeFormats) {\n    this.cdRef = cdRef;\n    this.dateTimeAdapter = dateTimeAdapter;\n    this.dateTimeFormats = dateTimeFormats;\n    this._selectMode = 'single';\n    this._selecteds = [];\n    this.localeSub = Subscription.EMPTY;\n    this.initiated = false;\n    this.selectedMonths = [];\n    this.change = new EventEmitter();\n    this.monthSelected = new EventEmitter();\n    this.pickerMomentChange = new EventEmitter();\n    this.keyboardEnter = new EventEmitter();\n    this.monthNames = this.dateTimeAdapter.getMonthNames('short');\n  }\n\n  Object.defineProperty(OwlYearViewComponent.prototype, \"selectMode\", {\n    get: function get() {\n      return this._selectMode;\n    },\n    set: function set(val) {\n      this._selectMode = val;\n\n      if (this.initiated) {\n        this.generateMonthList();\n        this.cdRef.markForCheck();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"selected\", {\n    get: function get() {\n      return this._selected;\n    },\n    set: function set(value) {\n      value = this.dateTimeAdapter.deserialize(value);\n      this._selected = this.getValidDate(value);\n      this.setSelectedMonths();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"selecteds\", {\n    get: function get() {\n      return this._selecteds;\n    },\n    set: function set(values) {\n      this._selecteds = [];\n\n      for (var i = 0; i < values.length; i++) {\n        var value = this.dateTimeAdapter.deserialize(values[i]);\n\n        this._selecteds.push(this.getValidDate(value));\n      }\n\n      this.setSelectedMonths();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"pickerMoment\", {\n    get: function get() {\n      return this._pickerMoment;\n    },\n    set: function set(value) {\n      var oldMoment = this._pickerMoment;\n      value = this.dateTimeAdapter.deserialize(value);\n      this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n\n      if (!this.hasSameYear(oldMoment, this._pickerMoment) && this.initiated) {\n        this.generateMonthList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"dateFilter\", {\n    get: function get() {\n      return this._dateFilter;\n    },\n    set: function set(filter) {\n      this._dateFilter = filter;\n\n      if (this.initiated) {\n        this.generateMonthList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"minDate\", {\n    get: function get() {\n      return this._minDate;\n    },\n    set: function set(value) {\n      value = this.dateTimeAdapter.deserialize(value);\n      this._minDate = this.getValidDate(value);\n\n      if (this.initiated) {\n        this.generateMonthList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"maxDate\", {\n    get: function get() {\n      return this._maxDate;\n    },\n    set: function set(value) {\n      value = this.dateTimeAdapter.deserialize(value);\n      this._maxDate = this.getValidDate(value);\n\n      if (this.initiated) {\n        this.generateMonthList();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"months\", {\n    get: function get() {\n      return this._months;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"activeCell\", {\n    get: function get() {\n      if (this._pickerMoment) {\n        return this.dateTimeAdapter.getMonth(this._pickerMoment);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"isInSingleMode\", {\n    get: function get() {\n      return this.selectMode === 'single';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"isInRangeMode\", {\n    get: function get() {\n      return this.selectMode === 'range' || this.selectMode === 'rangeFrom' || this.selectMode === 'rangeTo';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlYearViewComponent.prototype, \"owlDTCalendarView\", {\n    get: function get() {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OwlYearViewComponent.prototype.ngOnInit = function () {\n    var _this = this;\n\n    this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(function () {\n      _this.generateMonthList();\n\n      _this.cdRef.markForCheck();\n    });\n  };\n\n  OwlYearViewComponent.prototype.ngAfterContentInit = function () {\n    this.generateMonthList();\n    this.initiated = true;\n  };\n\n  OwlYearViewComponent.prototype.ngOnDestroy = function () {\n    this.localeSub.unsubscribe();\n  };\n\n  OwlYearViewComponent.prototype.selectCalendarCell = function (cell) {\n    this.selectMonth(cell.value);\n  };\n\n  OwlYearViewComponent.prototype.selectMonth = function (month) {\n    var firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n    this.monthSelected.emit(firstDateOfMonth);\n    var daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n    var result = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)), this.dateTimeAdapter.getHours(this.pickerMoment), this.dateTimeAdapter.getMinutes(this.pickerMoment), this.dateTimeAdapter.getSeconds(this.pickerMoment));\n    this.change.emit(result);\n  };\n\n  OwlYearViewComponent.prototype.handleCalendarKeydown = function (event) {\n    var moment;\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case RIGHT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case UP_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -3);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case DOWN_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 3);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case HOME:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -this.dateTimeAdapter.getMonth(this.pickerMoment));\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case END:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 11 - this.dateTimeAdapter.getMonth(this.pickerMoment));\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case PAGE_UP:\n        moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 : -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case PAGE_DOWN:\n        moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 : 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case ENTER:\n        this.selectMonth(this.dateTimeAdapter.getMonth(this.pickerMoment));\n        this.keyboardEnter.emit();\n        break;\n\n      default:\n        return;\n    }\n\n    this.focusActiveCell();\n    event.preventDefault();\n  };\n\n  OwlYearViewComponent.prototype.generateMonthList = function () {\n    if (!this.pickerMoment) {\n      return;\n    }\n\n    this.setSelectedMonths();\n    this.todayMonth = this.getMonthInCurrentYear(this.dateTimeAdapter.now());\n    this._months = [];\n\n    for (var i = 0; i < MONTHS_PER_YEAR / MONTHS_PER_ROW; i++) {\n      var row = [];\n\n      for (var j = 0; j < MONTHS_PER_ROW; j++) {\n        var month = j + i * MONTHS_PER_ROW;\n        var monthCell = this.createMonthCell(month);\n        row.push(monthCell);\n      }\n\n      this._months.push(row);\n    }\n\n    return;\n  };\n\n  OwlYearViewComponent.prototype.createMonthCell = function (month) {\n    var startDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n    var ariaLabel = this.dateTimeAdapter.format(startDateOfMonth, this.dateTimeFormats.monthYearA11yLabel);\n    var cellClass = 'owl-dt-month-' + month;\n    return new CalendarCell(month, this.monthNames[month], ariaLabel, this.isMonthEnabled(month), false, cellClass);\n  };\n\n  OwlYearViewComponent.prototype.isMonthEnabled = function (month) {\n    var firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n\n    for (var date = firstDateOfMonth; this.dateTimeAdapter.getMonth(date) === month; date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\n      if (!!date && (!this.dateFilter || this.dateFilter(date)) && (!this.minDate || this.dateTimeAdapter.compare(date, this.minDate) >= 0) && (!this.maxDate || this.dateTimeAdapter.compare(date, this.maxDate) <= 0)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  OwlYearViewComponent.prototype.getMonthInCurrentYear = function (date) {\n    if (this.getValidDate(date) && this.getValidDate(this._pickerMoment)) {\n      var result = this.dateTimeAdapter.compareYear(date, this._pickerMoment);\n\n      if (result < 0) {\n        return -1;\n      } else if (result > 0) {\n        return 12;\n      } else {\n        return this.dateTimeAdapter.getMonth(date);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  OwlYearViewComponent.prototype.setSelectedMonths = function () {\n    this.selectedMonths = [];\n\n    if (this.isInSingleMode && this.selected) {\n      this.selectedMonths[0] = this.getMonthInCurrentYear(this.selected);\n    }\n\n    if (this.isInRangeMode && this.selecteds) {\n      this.selectedMonths[0] = this.getMonthInCurrentYear(this.selecteds[0]);\n      this.selectedMonths[1] = this.getMonthInCurrentYear(this.selecteds[1]);\n    }\n  };\n\n  OwlYearViewComponent.prototype.hasSameYear = function (dateLeft, dateRight) {\n    return !!(dateLeft && dateRight && this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight));\n  };\n\n  OwlYearViewComponent.prototype.getValidDate = function (obj) {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj) ? obj : null;\n  };\n\n  OwlYearViewComponent.prototype.focusActiveCell = function () {\n    this.calendarBodyElm.focusActiveCell();\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], OwlYearViewComponent.prototype, \"selectMode\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlYearViewComponent.prototype, \"selected\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], OwlYearViewComponent.prototype, \"selecteds\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlYearViewComponent.prototype, \"pickerMoment\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], OwlYearViewComponent.prototype, \"dateFilter\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlYearViewComponent.prototype, \"minDate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlYearViewComponent.prototype, \"maxDate\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], OwlYearViewComponent.prototype, \"change\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], OwlYearViewComponent.prototype, \"monthSelected\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], OwlYearViewComponent.prototype, \"pickerMomentChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], OwlYearViewComponent.prototype, \"keyboardEnter\", void 0);\n\n  __decorate([ViewChild(OwlCalendarBodyComponent), __metadata(\"design:type\", OwlCalendarBodyComponent)], OwlYearViewComponent.prototype, \"calendarBodyElm\", void 0);\n\n  __decorate([HostBinding('class.owl-dt-calendar-view'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], OwlYearViewComponent.prototype, \"owlDTCalendarView\", null);\n\n  OwlYearViewComponent = __decorate([__param(1, Optional()), __param(2, Optional()), __param(2, Inject(OWL_DATE_TIME_FORMATS)), __metadata(\"design:paramtypes\", [ChangeDetectorRef, DateTimeAdapter, Object])], OwlYearViewComponent);\n\n  OwlYearViewComponent.ɵfac = function OwlYearViewComponent_Factory(t) {\n    return new (t || OwlYearViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DateTimeAdapter, 8), ɵngcc0.ɵɵdirectiveInject(OWL_DATE_TIME_FORMATS, 8));\n  };\n\n  OwlYearViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: OwlYearViewComponent,\n    selectors: [[\"owl-date-time-year-view\"]],\n    viewQuery: function OwlYearViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(OwlCalendarBodyComponent, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.calendarBodyElm = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function OwlYearViewComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"owl-dt-calendar-view\", ctx.owlDTCalendarView);\n      }\n    },\n    inputs: {\n      selectMode: \"selectMode\",\n      selected: \"selected\",\n      selecteds: \"selecteds\",\n      pickerMoment: \"pickerMoment\",\n      dateFilter: \"dateFilter\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\"\n    },\n    outputs: {\n      change: \"change\",\n      monthSelected: \"monthSelected\",\n      pickerMomentChange: \"pickerMomentChange\",\n      keyboardEnter: \"keyboardEnter\"\n    },\n    exportAs: [\"owlMonthView\"],\n    decls: 5,\n    vars: 7,\n    consts: [[1, \"owl-dt-calendar-table\", \"owl-dt-calendar-year-table\"], [1, \"owl-dt-calendar-header\"], [\"aria-hidden\", \"true\", \"colspan\", \"3\", 1, \"owl-dt-calendar-table-divider\"], [\"owl-date-time-calendar-body\", \"\", \"role\", \"grid\", 3, \"rows\", \"numCols\", \"cellRatio\", \"activeCell\", \"todayValue\", \"selectedValues\", \"selectMode\", \"keydown\", \"select\"]],\n    template: function OwlYearViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"keydown\", function OwlYearViewComponent_Template_tbody_keydown_4_listener($event) {\n          return ctx.handleCalendarKeydown($event);\n        })(\"select\", function OwlYearViewComponent_Template_tbody_select_4_listener($event) {\n          return ctx.selectCalendarCell($event);\n        });\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx.months)(\"numCols\", 3)(\"cellRatio\", 3 / 7)(\"activeCell\", ctx.activeCell)(\"todayValue\", ctx.todayMonth)(\"selectedValues\", ctx.selectedMonths)(\"selectMode\", ctx.selectMode);\n      }\n    },\n    directives: [ɵngcc2.OwlCalendarBodyComponent],\n    styles: [\"\"],\n    changeDetection: 0\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return OwlYearViewComponent;\n}();\n\nexport { OwlYearViewComponent }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIteWVhci12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiY2FsZW5kYXIteWVhci12aWV3LmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQVNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUE2QjtBQUM3QjtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG52YXIgX19tZXRhZGF0YSA9ICh0aGlzICYmIHRoaXMuX19tZXRhZGF0YSkgfHwgZnVuY3Rpb24gKGssIHYpIHtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QubWV0YWRhdGEgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIFJlZmxlY3QubWV0YWRhdGEoaywgdik7XG59O1xudmFyIF9fcGFyYW0gPSAodGhpcyAmJiB0aGlzLl9fcGFyYW0pIHx8IGZ1bmN0aW9uIChwYXJhbUluZGV4LCBkZWNvcmF0b3IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7IGRlY29yYXRvcih0YXJnZXQsIGtleSwgcGFyYW1JbmRleCk7IH1cbn07XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZywgSW5qZWN0LCBJbnB1dCwgT3B0aW9uYWwsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDYWxlbmRhckNlbGwsIE93bENhbGVuZGFyQm9keUNvbXBvbmVudCB9IGZyb20gJy4vY2FsZW5kYXItYm9keS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0ZVRpbWVBZGFwdGVyIH0gZnJvbSAnLi9hZGFwdGVyL2RhdGUtdGltZS1hZGFwdGVyLmNsYXNzJztcbmltcG9ydCB7IE9XTF9EQVRFX1RJTUVfRk9STUFUUyB9IGZyb20gJy4vYWRhcHRlci9kYXRlLXRpbWUtZm9ybWF0LmNsYXNzJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgRE9XTl9BUlJPVywgRU5ELCBFTlRFUiwgSE9NRSwgTEVGVF9BUlJPVywgUEFHRV9ET1dOLCBQQUdFX1VQLCBSSUdIVF9BUlJPVywgVVBfQVJST1cgfSBmcm9tICdAYW5ndWxhci9jZGsva2V5Y29kZXMnO1xudmFyIE1PTlRIU19QRVJfWUVBUiA9IDEyO1xudmFyIE1PTlRIU19QRVJfUk9XID0gMztcbnZhciBPd2xZZWFyVmlld0NvbXBvbmVudCA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gT3dsWWVhclZpZXdDb21wb25lbnQoY2RSZWYsIGRhdGVUaW1lQWRhcHRlciwgZGF0ZVRpbWVGb3JtYXRzKSB7XG4gICAgICAgIHRoaXMuY2RSZWYgPSBjZFJlZjtcbiAgICAgICAgdGhpcy5kYXRlVGltZUFkYXB0ZXIgPSBkYXRlVGltZUFkYXB0ZXI7XG4gICAgICAgIHRoaXMuZGF0ZVRpbWVGb3JtYXRzID0gZGF0ZVRpbWVGb3JtYXRzO1xuICAgICAgICB0aGlzLl9zZWxlY3RNb2RlID0gJ3NpbmdsZSc7XG4gICAgICAgIHRoaXMuX3NlbGVjdGVkcyA9IFtdO1xuICAgICAgICB0aGlzLmxvY2FsZVN1YiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcbiAgICAgICAgdGhpcy5pbml0aWF0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZE1vbnRocyA9IFtdO1xuICAgICAgICB0aGlzLmNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5tb250aFNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLnBpY2tlck1vbWVudENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5rZXlib2FyZEVudGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLm1vbnRoTmFtZXMgPSB0aGlzLmRhdGVUaW1lQWRhcHRlci5nZXRNb250aE5hbWVzKCdzaG9ydCcpO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcInNlbGVjdE1vZGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zZWxlY3RNb2RlO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgIHRoaXMuX3NlbGVjdE1vZGUgPSB2YWw7XG4gICAgICAgICAgICBpZiAodGhpcy5pbml0aWF0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTW9udGhMaXN0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jZFJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RlZFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NlbGVjdGVkO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgdmFsdWUgPSB0aGlzLmRhdGVUaW1lQWRhcHRlci5kZXNlcmlhbGl6ZSh2YWx1ZSk7XG4gICAgICAgICAgICB0aGlzLl9zZWxlY3RlZCA9IHRoaXMuZ2V0VmFsaWREYXRlKHZhbHVlKTtcbiAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRNb250aHMoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RlZHNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZHM7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlcykge1xuICAgICAgICAgICAgdGhpcy5fc2VsZWN0ZWRzID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmRlc2VyaWFsaXplKHZhbHVlc1tpXSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2VsZWN0ZWRzLnB1c2godGhpcy5nZXRWYWxpZERhdGUodmFsdWUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRNb250aHMoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJwaWNrZXJNb21lbnRcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9waWNrZXJNb21lbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgb2xkTW9tZW50ID0gdGhpcy5fcGlja2VyTW9tZW50O1xuICAgICAgICAgICAgdmFsdWUgPSB0aGlzLmRhdGVUaW1lQWRhcHRlci5kZXNlcmlhbGl6ZSh2YWx1ZSk7XG4gICAgICAgICAgICB0aGlzLl9waWNrZXJNb21lbnQgPSB0aGlzLmdldFZhbGlkRGF0ZSh2YWx1ZSkgfHwgdGhpcy5kYXRlVGltZUFkYXB0ZXIubm93KCk7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaGFzU2FtZVllYXIob2xkTW9tZW50LCB0aGlzLl9waWNrZXJNb21lbnQpICYmIHRoaXMuaW5pdGlhdGVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1vbnRoTGlzdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcImRhdGVGaWx0ZXJcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9kYXRlRmlsdGVyO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChmaWx0ZXIpIHtcbiAgICAgICAgICAgIHRoaXMuX2RhdGVGaWx0ZXIgPSBmaWx0ZXI7XG4gICAgICAgICAgICBpZiAodGhpcy5pbml0aWF0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTW9udGhMaXN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwibWluRGF0ZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21pbkRhdGU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmRlc2VyaWFsaXplKHZhbHVlKTtcbiAgICAgICAgICAgIHRoaXMuX21pbkRhdGUgPSB0aGlzLmdldFZhbGlkRGF0ZSh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAodGhpcy5pbml0aWF0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTW9udGhMaXN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwibWF4RGF0ZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21heERhdGU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmRlc2VyaWFsaXplKHZhbHVlKTtcbiAgICAgICAgICAgIHRoaXMuX21heERhdGUgPSB0aGlzLmdldFZhbGlkRGF0ZSh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAodGhpcy5pbml0aWF0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTW9udGhMaXN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwibW9udGhzXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbW9udGhzO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcImFjdGl2ZUNlbGxcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9waWNrZXJNb21lbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRlVGltZUFkYXB0ZXIuZ2V0TW9udGgodGhpcy5fcGlja2VyTW9tZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0luU2luZ2xlTW9kZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0TW9kZSA9PT0gJ3NpbmdsZSc7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwiaXNJblJhbmdlTW9kZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0TW9kZSA9PT0gJ3JhbmdlJyB8fCB0aGlzLnNlbGVjdE1vZGUgPT09ICdyYW5nZUZyb20nXG4gICAgICAgICAgICAgICAgfHwgdGhpcy5zZWxlY3RNb2RlID09PSAncmFuZ2VUbyc7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwib3dsRFRDYWxlbmRhclZpZXdcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUubmdPbkluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMubG9jYWxlU3ViID0gdGhpcy5kYXRlVGltZUFkYXB0ZXIubG9jYWxlQ2hhbmdlcy5zdWJzY3JpYmUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuZ2VuZXJhdGVNb250aExpc3QoKTtcbiAgICAgICAgICAgIF90aGlzLmNkUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZS5uZ0FmdGVyQ29udGVudEluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVNb250aExpc3QoKTtcbiAgICAgICAgdGhpcy5pbml0aWF0ZWQgPSB0cnVlO1xuICAgIH07XG4gICAgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLm5nT25EZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmxvY2FsZVN1Yi51bnN1YnNjcmliZSgpO1xuICAgIH07XG4gICAgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLnNlbGVjdENhbGVuZGFyQ2VsbCA9IGZ1bmN0aW9uIChjZWxsKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0TW9udGgoY2VsbC52YWx1ZSk7XG4gICAgfTtcbiAgICBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUuc2VsZWN0TW9udGggPSBmdW5jdGlvbiAobW9udGgpIHtcbiAgICAgICAgdmFyIGZpcnN0RGF0ZU9mTW9udGggPSB0aGlzLmRhdGVUaW1lQWRhcHRlci5jcmVhdGVEYXRlKHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmdldFllYXIodGhpcy5waWNrZXJNb21lbnQpLCBtb250aCwgMSk7XG4gICAgICAgIHRoaXMubW9udGhTZWxlY3RlZC5lbWl0KGZpcnN0RGF0ZU9mTW9udGgpO1xuICAgICAgICB2YXIgZGF5c0luTW9udGggPSB0aGlzLmRhdGVUaW1lQWRhcHRlci5nZXROdW1EYXlzSW5Nb250aChmaXJzdERhdGVPZk1vbnRoKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmNyZWF0ZURhdGUodGhpcy5kYXRlVGltZUFkYXB0ZXIuZ2V0WWVhcih0aGlzLnBpY2tlck1vbWVudCksIG1vbnRoLCBNYXRoLm1pbihkYXlzSW5Nb250aCwgdGhpcy5kYXRlVGltZUFkYXB0ZXIuZ2V0RGF0ZSh0aGlzLnBpY2tlck1vbWVudCkpLCB0aGlzLmRhdGVUaW1lQWRhcHRlci5nZXRIb3Vycyh0aGlzLnBpY2tlck1vbWVudCksIHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmdldE1pbnV0ZXModGhpcy5waWNrZXJNb21lbnQpLCB0aGlzLmRhdGVUaW1lQWRhcHRlci5nZXRTZWNvbmRzKHRoaXMucGlja2VyTW9tZW50KSk7XG4gICAgICAgIHRoaXMuY2hhbmdlLmVtaXQocmVzdWx0KTtcbiAgICB9O1xuICAgIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZS5oYW5kbGVDYWxlbmRhcktleWRvd24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgdmFyIG1vbWVudDtcbiAgICAgICAgc3dpdGNoIChldmVudC5rZXlDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIExFRlRfQVJST1c6XG4gICAgICAgICAgICAgICAgbW9tZW50ID0gdGhpcy5kYXRlVGltZUFkYXB0ZXIuYWRkQ2FsZW5kYXJNb250aHModGhpcy5waWNrZXJNb21lbnQsIC0xKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBpY2tlck1vbWVudENoYW5nZS5lbWl0KG1vbWVudCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFJJR0hUX0FSUk9XOlxuICAgICAgICAgICAgICAgIG1vbWVudCA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmFkZENhbGVuZGFyTW9udGhzKHRoaXMucGlja2VyTW9tZW50LCAxKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBpY2tlck1vbWVudENoYW5nZS5lbWl0KG1vbWVudCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFVQX0FSUk9XOlxuICAgICAgICAgICAgICAgIG1vbWVudCA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmFkZENhbGVuZGFyTW9udGhzKHRoaXMucGlja2VyTW9tZW50LCAtMyk7XG4gICAgICAgICAgICAgICAgdGhpcy5waWNrZXJNb21lbnRDaGFuZ2UuZW1pdChtb21lbnQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBET1dOX0FSUk9XOlxuICAgICAgICAgICAgICAgIG1vbWVudCA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmFkZENhbGVuZGFyTW9udGhzKHRoaXMucGlja2VyTW9tZW50LCAzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBpY2tlck1vbWVudENoYW5nZS5lbWl0KG1vbWVudCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEhPTUU6XG4gICAgICAgICAgICAgICAgbW9tZW50ID0gdGhpcy5kYXRlVGltZUFkYXB0ZXIuYWRkQ2FsZW5kYXJNb250aHModGhpcy5waWNrZXJNb21lbnQsIC10aGlzLmRhdGVUaW1lQWRhcHRlci5nZXRNb250aCh0aGlzLnBpY2tlck1vbWVudCkpO1xuICAgICAgICAgICAgICAgIHRoaXMucGlja2VyTW9tZW50Q2hhbmdlLmVtaXQobW9tZW50KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgRU5EOlxuICAgICAgICAgICAgICAgIG1vbWVudCA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmFkZENhbGVuZGFyTW9udGhzKHRoaXMucGlja2VyTW9tZW50LCAxMSAtIHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmdldE1vbnRoKHRoaXMucGlja2VyTW9tZW50KSk7XG4gICAgICAgICAgICAgICAgdGhpcy5waWNrZXJNb21lbnRDaGFuZ2UuZW1pdChtb21lbnQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQQUdFX1VQOlxuICAgICAgICAgICAgICAgIG1vbWVudCA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmFkZENhbGVuZGFyWWVhcnModGhpcy5waWNrZXJNb21lbnQsIGV2ZW50LmFsdEtleSA/IC0xMCA6IC0xKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBpY2tlck1vbWVudENoYW5nZS5lbWl0KG1vbWVudCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFBBR0VfRE9XTjpcbiAgICAgICAgICAgICAgICBtb21lbnQgPSB0aGlzLmRhdGVUaW1lQWRhcHRlci5hZGRDYWxlbmRhclllYXJzKHRoaXMucGlja2VyTW9tZW50LCBldmVudC5hbHRLZXkgPyAxMCA6IDEpO1xuICAgICAgICAgICAgICAgIHRoaXMucGlja2VyTW9tZW50Q2hhbmdlLmVtaXQobW9tZW50KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgRU5URVI6XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RNb250aCh0aGlzLmRhdGVUaW1lQWRhcHRlci5nZXRNb250aCh0aGlzLnBpY2tlck1vbWVudCkpO1xuICAgICAgICAgICAgICAgIHRoaXMua2V5Ym9hcmRFbnRlci5lbWl0KCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZvY3VzQWN0aXZlQ2VsbCgpO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG4gICAgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLmdlbmVyYXRlTW9udGhMaXN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMucGlja2VyTW9tZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRTZWxlY3RlZE1vbnRocygpO1xuICAgICAgICB0aGlzLnRvZGF5TW9udGggPSB0aGlzLmdldE1vbnRoSW5DdXJyZW50WWVhcih0aGlzLmRhdGVUaW1lQWRhcHRlci5ub3coKSk7XG4gICAgICAgIHRoaXMuX21vbnRocyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IE1PTlRIU19QRVJfWUVBUiAvIE1PTlRIU19QRVJfUk9XOyBpKyspIHtcbiAgICAgICAgICAgIHZhciByb3cgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgTU9OVEhTX1BFUl9ST1c7IGorKykge1xuICAgICAgICAgICAgICAgIHZhciBtb250aCA9IGogKyBpICogTU9OVEhTX1BFUl9ST1c7XG4gICAgICAgICAgICAgICAgdmFyIG1vbnRoQ2VsbCA9IHRoaXMuY3JlYXRlTW9udGhDZWxsKG1vbnRoKTtcbiAgICAgICAgICAgICAgICByb3cucHVzaChtb250aENlbGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fbW9udGhzLnB1c2gocm93KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfTtcbiAgICBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUuY3JlYXRlTW9udGhDZWxsID0gZnVuY3Rpb24gKG1vbnRoKSB7XG4gICAgICAgIHZhciBzdGFydERhdGVPZk1vbnRoID0gdGhpcy5kYXRlVGltZUFkYXB0ZXIuY3JlYXRlRGF0ZSh0aGlzLmRhdGVUaW1lQWRhcHRlci5nZXRZZWFyKHRoaXMucGlja2VyTW9tZW50KSwgbW9udGgsIDEpO1xuICAgICAgICB2YXIgYXJpYUxhYmVsID0gdGhpcy5kYXRlVGltZUFkYXB0ZXIuZm9ybWF0KHN0YXJ0RGF0ZU9mTW9udGgsIHRoaXMuZGF0ZVRpbWVGb3JtYXRzLm1vbnRoWWVhckExMXlMYWJlbCk7XG4gICAgICAgIHZhciBjZWxsQ2xhc3MgPSAnb3dsLWR0LW1vbnRoLScgKyBtb250aDtcbiAgICAgICAgcmV0dXJuIG5ldyBDYWxlbmRhckNlbGwobW9udGgsIHRoaXMubW9udGhOYW1lc1ttb250aF0sIGFyaWFMYWJlbCwgdGhpcy5pc01vbnRoRW5hYmxlZChtb250aCksIGZhbHNlLCBjZWxsQ2xhc3MpO1xuICAgIH07XG4gICAgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLmlzTW9udGhFbmFibGVkID0gZnVuY3Rpb24gKG1vbnRoKSB7XG4gICAgICAgIHZhciBmaXJzdERhdGVPZk1vbnRoID0gdGhpcy5kYXRlVGltZUFkYXB0ZXIuY3JlYXRlRGF0ZSh0aGlzLmRhdGVUaW1lQWRhcHRlci5nZXRZZWFyKHRoaXMucGlja2VyTW9tZW50KSwgbW9udGgsIDEpO1xuICAgICAgICBmb3IgKHZhciBkYXRlID0gZmlyc3REYXRlT2ZNb250aDsgdGhpcy5kYXRlVGltZUFkYXB0ZXIuZ2V0TW9udGgoZGF0ZSkgPT09IG1vbnRoOyBkYXRlID0gdGhpcy5kYXRlVGltZUFkYXB0ZXIuYWRkQ2FsZW5kYXJEYXlzKGRhdGUsIDEpKSB7XG4gICAgICAgICAgICBpZiAoISFkYXRlICYmXG4gICAgICAgICAgICAgICAgKCF0aGlzLmRhdGVGaWx0ZXIgfHwgdGhpcy5kYXRlRmlsdGVyKGRhdGUpKSAmJlxuICAgICAgICAgICAgICAgICghdGhpcy5taW5EYXRlIHx8IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmNvbXBhcmUoZGF0ZSwgdGhpcy5taW5EYXRlKSA+PSAwKSAmJlxuICAgICAgICAgICAgICAgICghdGhpcy5tYXhEYXRlIHx8IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmNvbXBhcmUoZGF0ZSwgdGhpcy5tYXhEYXRlKSA8PSAwKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZS5nZXRNb250aEluQ3VycmVudFllYXIgPSBmdW5jdGlvbiAoZGF0ZSkge1xuICAgICAgICBpZiAodGhpcy5nZXRWYWxpZERhdGUoZGF0ZSkgJiYgdGhpcy5nZXRWYWxpZERhdGUodGhpcy5fcGlja2VyTW9tZW50KSkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmNvbXBhcmVZZWFyKGRhdGUsIHRoaXMuX3BpY2tlck1vbWVudCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0IDwgMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJlc3VsdCA+IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMTI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRlVGltZUFkYXB0ZXIuZ2V0TW9udGgoZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG4gICAgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLnNldFNlbGVjdGVkTW9udGhzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnNlbGVjdGVkTW9udGhzID0gW107XG4gICAgICAgIGlmICh0aGlzLmlzSW5TaW5nbGVNb2RlICYmIHRoaXMuc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRNb250aHNbMF0gPSB0aGlzLmdldE1vbnRoSW5DdXJyZW50WWVhcih0aGlzLnNlbGVjdGVkKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pc0luUmFuZ2VNb2RlICYmIHRoaXMuc2VsZWN0ZWRzKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkTW9udGhzWzBdID0gdGhpcy5nZXRNb250aEluQ3VycmVudFllYXIodGhpcy5zZWxlY3RlZHNbMF0pO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZE1vbnRoc1sxXSA9IHRoaXMuZ2V0TW9udGhJbkN1cnJlbnRZZWFyKHRoaXMuc2VsZWN0ZWRzWzFdKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLmhhc1NhbWVZZWFyID0gZnVuY3Rpb24gKGRhdGVMZWZ0LCBkYXRlUmlnaHQpIHtcbiAgICAgICAgcmV0dXJuICEhKGRhdGVMZWZ0ICYmIGRhdGVSaWdodCAmJlxuICAgICAgICAgICAgdGhpcy5kYXRlVGltZUFkYXB0ZXIuZ2V0WWVhcihkYXRlTGVmdCkgPT09IHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmdldFllYXIoZGF0ZVJpZ2h0KSk7XG4gICAgfTtcbiAgICBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUuZ2V0VmFsaWREYXRlID0gZnVuY3Rpb24gKG9iaikge1xuICAgICAgICByZXR1cm4gKHRoaXMuZGF0ZVRpbWVBZGFwdGVyLmlzRGF0ZUluc3RhbmNlKG9iaikgJiYgdGhpcy5kYXRlVGltZUFkYXB0ZXIuaXNWYWxpZChvYmopKSA/IG9iaiA6IG51bGw7XG4gICAgfTtcbiAgICBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUuZm9jdXNBY3RpdmVDZWxsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmNhbGVuZGFyQm9keUVsbS5mb2N1c0FjdGl2ZUNlbGwoKTtcbiAgICB9O1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxuICAgIF0sIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RNb2RlXCIsIG51bGwpO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxuICAgIF0sIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RlZFwiLCBudWxsKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtBcnJheV0pXG4gICAgXSwgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcInNlbGVjdGVkc1wiLCBudWxsKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcbiAgICBdLCBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwicGlja2VyTW9tZW50XCIsIG51bGwpO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Z1bmN0aW9uXSlcbiAgICBdLCBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwiZGF0ZUZpbHRlclwiLCBudWxsKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcbiAgICBdLCBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwibWluRGF0ZVwiLCBudWxsKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcbiAgICBdLCBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwibWF4RGF0ZVwiLCBudWxsKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgT3V0cHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG4gICAgXSwgT3dsWWVhclZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcImNoYW5nZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBPdXRwdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbiAgICBdLCBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwibW9udGhTZWxlY3RlZFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBPdXRwdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbiAgICBdLCBPd2xZZWFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUsIFwicGlja2VyTW9tZW50Q2hhbmdlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIE91dHB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuICAgIF0sIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJrZXlib2FyZEVudGVyXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIFZpZXdDaGlsZChPd2xDYWxlbmRhckJvZHlDb21wb25lbnQpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT3dsQ2FsZW5kYXJCb2R5Q29tcG9uZW50KVxuICAgIF0sIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjYWxlbmRhckJvZHlFbG1cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSG9zdEJpbmRpbmcoJ2NsYXNzLm93bC1kdC1jYWxlbmRhci12aWV3JyksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuICAgIF0sIE93bFllYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJvd2xEVENhbGVuZGFyVmlld1wiLCBudWxsKTtcbiAgICBPd2xZZWFyVmlld0NvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBDb21wb25lbnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdvd2wtZGF0ZS10aW1lLXllYXItdmlldycsXG4gICAgICAgICAgICBleHBvcnRBczogJ293bE1vbnRoVmlldycsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCI8dGFibGUgY2xhc3M9XFxcIm93bC1kdC1jYWxlbmRhci10YWJsZSBvd2wtZHQtY2FsZW5kYXIteWVhci10YWJsZVxcXCI+PHRoZWFkIGNsYXNzPVxcXCJvd2wtZHQtY2FsZW5kYXItaGVhZGVyXFxcIj48dHI+PHRoIGNsYXNzPVxcXCJvd2wtZHQtY2FsZW5kYXItdGFibGUtZGl2aWRlclxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiIGNvbHNwYW49XFxcIjNcXFwiPjwvdGg+PC90cj48L3RoZWFkPjx0Ym9keSBvd2wtZGF0ZS10aW1lLWNhbGVuZGFyLWJvZHkgcm9sZT1cXFwiZ3JpZFxcXCIgW3Jvd3NdPVxcXCJtb250aHNcXFwiIFtudW1Db2xzXT1cXFwiM1xcXCIgW2NlbGxSYXRpb109XFxcIjMgLyA3XFxcIiBbYWN0aXZlQ2VsbF09XFxcImFjdGl2ZUNlbGxcXFwiIFt0b2RheVZhbHVlXT1cXFwidG9kYXlNb250aFxcXCIgW3NlbGVjdGVkVmFsdWVzXT1cXFwic2VsZWN0ZWRNb250aHNcXFwiIFtzZWxlY3RNb2RlXT1cXFwic2VsZWN0TW9kZVxcXCIgKGtleWRvd24pPVxcXCJoYW5kbGVDYWxlbmRhcktleWRvd24oJGV2ZW50KVxcXCIgKHNlbGVjdCk9XFxcInNlbGVjdENhbGVuZGFyQ2VsbCgkZXZlbnQpXFxcIj48L3Rib2R5PjwvdGFibGU+XCIsXG4gICAgICAgICAgICBzdHlsZXM6IFtcIlwiXSxcbiAgICAgICAgICAgIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICAgICAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgICAgIH0pLFxuICAgICAgICBfX3BhcmFtKDEsIE9wdGlvbmFsKCkpLFxuICAgICAgICBfX3BhcmFtKDIsIE9wdGlvbmFsKCkpLCBfX3BhcmFtKDIsIEluamVjdChPV0xfREFURV9USU1FX0ZPUk1BVFMpKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgICAgIERhdGVUaW1lQWRhcHRlciwgT2JqZWN0XSlcbiAgICBdLCBPd2xZZWFyVmlld0NvbXBvbmVudCk7XG4gICAgcmV0dXJuIE93bFllYXJWaWV3Q29tcG9uZW50O1xufSgpKTtcbmV4cG9ydCB7IE93bFllYXJWaWV3Q29tcG9uZW50IH07XG4iXX0=","map":null,"metadata":{},"sourceType":"module"}