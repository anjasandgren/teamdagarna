{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './adapter/date-time-adapter.class';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from './calendar-body.component';\n\nfunction OwlMonthViewComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 6)(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var weekday_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", weekday_r1.long);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(weekday_r1.short);\n  }\n}\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Inject, Input, Optional, Output, ViewChild } from '@angular/core';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nvar DAYS_PER_WEEK = 7;\nvar WEEKS_PER_VIEW = 6;\n\nvar OwlMonthViewComponent = function () {\n  function OwlMonthViewComponent(cdRef, dateTimeAdapter, dateTimeFormats) {\n    this.cdRef = cdRef;\n    this.dateTimeAdapter = dateTimeAdapter;\n    this.dateTimeFormats = dateTimeFormats;\n    this.hideOtherMonths = false;\n    this._firstDayOfWeek = 0;\n    this._selectMode = 'single';\n    this._selecteds = [];\n    this.localeSub = Subscription.EMPTY;\n    this.initiated = false;\n    this.selectedDates = [];\n    this.selectedChange = new EventEmitter();\n    this.userSelection = new EventEmitter();\n    this.pickerMomentChange = new EventEmitter();\n  }\n\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"firstDayOfWeek\", {\n    get: function get() {\n      return this._firstDayOfWeek;\n    },\n    set: function set(val) {\n      val = coerceNumberProperty(val);\n\n      if (val >= 0 && val <= 6 && val !== this._firstDayOfWeek) {\n        this._firstDayOfWeek = val;\n\n        if (this.initiated) {\n          this.generateWeekDays();\n          this.generateCalendar();\n          this.cdRef.markForCheck();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"selectMode\", {\n    get: function get() {\n      return this._selectMode;\n    },\n    set: function set(val) {\n      this._selectMode = val;\n\n      if (this.initiated) {\n        this.generateCalendar();\n        this.cdRef.markForCheck();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"selected\", {\n    get: function get() {\n      return this._selected;\n    },\n    set: function set(value) {\n      var oldSelected = this._selected;\n      value = this.dateTimeAdapter.deserialize(value);\n      this._selected = this.getValidDate(value);\n\n      if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\n        this.setSelectedDates();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"selecteds\", {\n    get: function get() {\n      return this._selecteds;\n    },\n    set: function set(values) {\n      var _this = this;\n\n      this._selecteds = values.map(function (v) {\n        v = _this.dateTimeAdapter.deserialize(v);\n        return _this.getValidDate(v);\n      });\n      this.setSelectedDates();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"pickerMoment\", {\n    get: function get() {\n      return this._pickerMoment;\n    },\n    set: function set(value) {\n      var oldMoment = this._pickerMoment;\n      value = this.dateTimeAdapter.deserialize(value);\n      this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n      this.firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this._pickerMoment), this.dateTimeAdapter.getMonth(this._pickerMoment), 1);\n\n      if (!this.isSameMonth(oldMoment, this._pickerMoment) && this.initiated) {\n        this.generateCalendar();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"dateFilter\", {\n    get: function get() {\n      return this._dateFilter;\n    },\n    set: function set(filter) {\n      this._dateFilter = filter;\n\n      if (this.initiated) {\n        this.generateCalendar();\n        this.cdRef.markForCheck();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"minDate\", {\n    get: function get() {\n      return this._minDate;\n    },\n    set: function set(value) {\n      value = this.dateTimeAdapter.deserialize(value);\n      this._minDate = this.getValidDate(value);\n\n      if (this.initiated) {\n        this.generateCalendar();\n        this.cdRef.markForCheck();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"maxDate\", {\n    get: function get() {\n      return this._maxDate;\n    },\n    set: function set(value) {\n      value = this.dateTimeAdapter.deserialize(value);\n      this._maxDate = this.getValidDate(value);\n\n      if (this.initiated) {\n        this.generateCalendar();\n        this.cdRef.markForCheck();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"weekdays\", {\n    get: function get() {\n      return this._weekdays;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"days\", {\n    get: function get() {\n      return this._days;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"activeCell\", {\n    get: function get() {\n      if (this.pickerMoment) {\n        return this.dateTimeAdapter.getDate(this.pickerMoment) + this.firstRowOffset - 1;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"isInSingleMode\", {\n    get: function get() {\n      return this.selectMode === 'single';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"isInRangeMode\", {\n    get: function get() {\n      return this.selectMode === 'range' || this.selectMode === 'rangeFrom' || this.selectMode === 'rangeTo';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlMonthViewComponent.prototype, \"owlDTCalendarView\", {\n    get: function get() {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OwlMonthViewComponent.prototype.ngOnInit = function () {\n    var _this = this;\n\n    this.generateWeekDays();\n    this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(function () {\n      _this.generateWeekDays();\n\n      _this.generateCalendar();\n\n      _this.cdRef.markForCheck();\n    });\n  };\n\n  OwlMonthViewComponent.prototype.ngAfterContentInit = function () {\n    this.generateCalendar();\n    this.initiated = true;\n  };\n\n  OwlMonthViewComponent.prototype.ngOnDestroy = function () {\n    this.localeSub.unsubscribe();\n  };\n\n  OwlMonthViewComponent.prototype.selectCalendarCell = function (cell) {\n    if (!cell.enabled || this.hideOtherMonths && cell.out) {\n      return;\n    }\n\n    this.selectDate(cell.value);\n  };\n\n  OwlMonthViewComponent.prototype.selectDate = function (date) {\n    var daysDiff = date - 1;\n    var selected = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n    this.selectedChange.emit(selected);\n    this.userSelection.emit();\n  };\n\n  OwlMonthViewComponent.prototype.handleCalendarKeydown = function (event) {\n    var moment;\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case RIGHT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case UP_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -7);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case DOWN_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 7);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case HOME:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1 - this.dateTimeAdapter.getDate(this.pickerMoment));\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case END:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) - this.dateTimeAdapter.getDate(this.pickerMoment));\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case PAGE_UP:\n        moment = event.altKey ? this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1) : this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case PAGE_DOWN:\n        moment = event.altKey ? this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1) : this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case ENTER:\n        if (!this.dateFilter || this.dateFilter(this.pickerMoment)) {\n          this.selectDate(this.dateTimeAdapter.getDate(this.pickerMoment));\n        }\n\n        break;\n\n      default:\n        return;\n    }\n\n    this.focusActiveCell();\n    event.preventDefault();\n  };\n\n  OwlMonthViewComponent.prototype.generateWeekDays = function () {\n    var longWeekdays = this.dateTimeAdapter.getDayOfWeekNames('long');\n    var shortWeekdays = this.dateTimeAdapter.getDayOfWeekNames('short');\n    var narrowWeekdays = this.dateTimeAdapter.getDayOfWeekNames('narrow');\n    var firstDayOfWeek = this.firstDayOfWeek;\n    var weekdays = longWeekdays.map(function (long, i) {\n      return {\n        long: long,\n        short: shortWeekdays[i],\n        narrow: narrowWeekdays[i]\n      };\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    this.dateNames = this.dateTimeAdapter.getDateNames();\n    return;\n  };\n\n  OwlMonthViewComponent.prototype.generateCalendar = function () {\n    if (!this.pickerMoment) {\n      return;\n    }\n\n    this.todayDate = null;\n    var startWeekdayOfMonth = this.dateTimeAdapter.getDay(this.firstDateOfMonth);\n    var firstDayOfWeek = this.firstDayOfWeek;\n    var daysDiff = 0 - (startWeekdayOfMonth + (DAYS_PER_WEEK - firstDayOfWeek)) % DAYS_PER_WEEK;\n    this.firstRowOffset = Math.abs(daysDiff);\n    this._days = [];\n\n    for (var i = 0; i < WEEKS_PER_VIEW; i++) {\n      var week = [];\n\n      for (var j = 0; j < DAYS_PER_WEEK; j++) {\n        var date = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n        var dateCell = this.createDateCell(date, daysDiff);\n\n        if (this.dateTimeAdapter.isSameDay(this.dateTimeAdapter.now(), date)) {\n          this.todayDate = daysDiff + 1;\n        }\n\n        week.push(dateCell);\n        daysDiff += 1;\n      }\n\n      this._days.push(week);\n    }\n\n    this.setSelectedDates();\n  };\n\n  OwlMonthViewComponent.prototype.createDateCell = function (date, daysDiff) {\n    var daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment);\n    var dateNum = this.dateTimeAdapter.getDate(date);\n    var dateName = dateNum.toString();\n    var ariaLabel = this.dateTimeAdapter.format(date, this.dateTimeFormats.dateA11yLabel);\n    var enabled = this.isDateEnabled(date);\n    var dayValue = daysDiff + 1;\n    var out = dayValue < 1 || dayValue > daysInMonth;\n    var cellClass = 'owl-dt-day-' + this.dateTimeAdapter.getDay(date);\n    return new CalendarCell(dayValue, dateName, ariaLabel, enabled, out, cellClass);\n  };\n\n  OwlMonthViewComponent.prototype.isDateEnabled = function (date) {\n    return !!date && (!this.dateFilter || this.dateFilter(date)) && (!this.minDate || this.dateTimeAdapter.compare(date, this.minDate) >= 0) && (!this.maxDate || this.dateTimeAdapter.compare(date, this.maxDate) <= 0);\n  };\n\n  OwlMonthViewComponent.prototype.getValidDate = function (obj) {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj) ? obj : null;\n  };\n\n  OwlMonthViewComponent.prototype.isSameMonth = function (dateLeft, dateRight) {\n    return !!(dateLeft && dateRight && this.dateTimeAdapter.isValid(dateLeft) && this.dateTimeAdapter.isValid(dateRight) && this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight) && this.dateTimeAdapter.getMonth(dateLeft) === this.dateTimeAdapter.getMonth(dateRight));\n  };\n\n  OwlMonthViewComponent.prototype.setSelectedDates = function () {\n    var _this = this;\n\n    this.selectedDates = [];\n\n    if (!this.firstDateOfMonth) {\n      return;\n    }\n\n    if (this.isInSingleMode && this.selected) {\n      var dayDiff = this.dateTimeAdapter.differenceInCalendarDays(this.selected, this.firstDateOfMonth);\n      this.selectedDates[0] = dayDiff + 1;\n      return;\n    }\n\n    if (this.isInRangeMode && this.selecteds) {\n      this.selectedDates = this.selecteds.map(function (selected) {\n        if (_this.dateTimeAdapter.isValid(selected)) {\n          var dayDiff = _this.dateTimeAdapter.differenceInCalendarDays(selected, _this.firstDateOfMonth);\n\n          return dayDiff + 1;\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n  OwlMonthViewComponent.prototype.focusActiveCell = function () {\n    this.calendarBodyElm.focusActiveCell();\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], OwlMonthViewComponent.prototype, \"hideOtherMonths\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], OwlMonthViewComponent.prototype, \"firstDayOfWeek\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], OwlMonthViewComponent.prototype, \"selectMode\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMonthViewComponent.prototype, \"selected\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], OwlMonthViewComponent.prototype, \"selecteds\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMonthViewComponent.prototype, \"pickerMoment\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], OwlMonthViewComponent.prototype, \"dateFilter\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMonthViewComponent.prototype, \"minDate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OwlMonthViewComponent.prototype, \"maxDate\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], OwlMonthViewComponent.prototype, \"selectedChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], OwlMonthViewComponent.prototype, \"userSelection\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], OwlMonthViewComponent.prototype, \"pickerMomentChange\", void 0);\n\n  __decorate([ViewChild(OwlCalendarBodyComponent), __metadata(\"design:type\", OwlCalendarBodyComponent)], OwlMonthViewComponent.prototype, \"calendarBodyElm\", void 0);\n\n  __decorate([HostBinding('class.owl-dt-calendar-view'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], OwlMonthViewComponent.prototype, \"owlDTCalendarView\", null);\n\n  OwlMonthViewComponent = __decorate([__param(1, Optional()), __param(2, Optional()), __param(2, Inject(OWL_DATE_TIME_FORMATS)), __metadata(\"design:paramtypes\", [ChangeDetectorRef, DateTimeAdapter, Object])], OwlMonthViewComponent);\n\n  OwlMonthViewComponent.ɵfac = function OwlMonthViewComponent_Factory(t) {\n    return new (t || OwlMonthViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DateTimeAdapter, 8), ɵngcc0.ɵɵdirectiveInject(OWL_DATE_TIME_FORMATS, 8));\n  };\n\n  OwlMonthViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: OwlMonthViewComponent,\n    selectors: [[\"owl-date-time-month-view\"]],\n    viewQuery: function OwlMonthViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(OwlCalendarBodyComponent, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.calendarBodyElm = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function OwlMonthViewComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"owl-dt-calendar-view\", ctx.owlDTCalendarView);\n      }\n    },\n    inputs: {\n      hideOtherMonths: \"hideOtherMonths\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      selectMode: \"selectMode\",\n      selected: \"selected\",\n      selecteds: \"selecteds\",\n      pickerMoment: \"pickerMoment\",\n      dateFilter: \"dateFilter\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\",\n      userSelection: \"userSelection\",\n      pickerMomentChange: \"pickerMomentChange\"\n    },\n    exportAs: [\"owlYearView\"],\n    decls: 7,\n    vars: 8,\n    consts: [[1, \"owl-dt-calendar-table\", \"owl-dt-calendar-month-table\"], [1, \"owl-dt-calendar-header\"], [1, \"owl-dt-weekdays\"], [\"class\", \"owl-dt-weekday\", \"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", \"colspan\", \"7\", 1, \"owl-dt-calendar-table-divider\"], [\"owl-date-time-calendar-body\", \"\", \"role\", \"grid\", 3, \"rows\", \"todayValue\", \"selectedValues\", \"selectMode\", \"activeCell\", \"keydown\", \"select\"], [\"scope\", \"col\", 1, \"owl-dt-weekday\"]],\n    template: function OwlMonthViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\", 2);\n        ɵngcc0.ɵɵtemplate(3, OwlMonthViewComponent_th_3_Template, 3, 2, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 4);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 5);\n        ɵngcc0.ɵɵlistener(\"keydown\", function OwlMonthViewComponent_Template_tbody_keydown_6_listener($event) {\n          return ctx.handleCalendarKeydown($event);\n        })(\"select\", function OwlMonthViewComponent_Template_tbody_select_6_listener($event) {\n          return ctx.selectCalendarCell($event);\n        });\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"owl-dt-calendar-only-current-month\", ctx.hideOtherMonths);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx.days)(\"todayValue\", ctx.todayDate)(\"selectedValues\", ctx.selectedDates)(\"selectMode\", ctx.selectMode)(\"activeCell\", ctx.activeCell);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, ɵngcc3.OwlCalendarBodyComponent],\n    styles: [\"\"],\n    changeDetection: 0\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return OwlMonthViewComponent;\n}();\n\nexport { OwlMonthViewComponent }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}