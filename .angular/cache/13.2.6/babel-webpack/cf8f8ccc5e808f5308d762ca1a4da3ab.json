{"ast":null,"code":"import _classCallCheck from \"/Users/frida/teamdagarna/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/frida/teamdagarna/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/frida/teamdagarna/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angularfire2/firestore\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction CompanycodesComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var company_r2 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"value\", company_r2.id);\n    i0.ɵɵproperty(\"selected\", company_r2.id == ctx_r0.preselected)(\"disabled\", ctx_r0.hasCode(company_r2.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(company_r2.name);\n  }\n}\n\nfunction CompanycodesComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var code_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", code_r3.companyname, \": \", code_r3.code, \"\");\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    \"is-loading\": a0\n  };\n};\n\nexport var CompanycodesComponent = /*#__PURE__*/(function () {\n  var CompanycodesComponent = /*#__PURE__*/function () {\n    function CompanycodesComponent(afs, fb) {\n      var _this = this;\n\n      _classCallCheck(this, CompanycodesComponent);\n\n      this.afs = afs;\n      this.fb = fb;\n      this.loading = false;\n      this.getCompanies().subscribe(function (companies) {\n        _this.companies = companies;\n      });\n      this.getCodes().subscribe(function (codes) {\n        _this.codes = codes;\n      });\n    }\n\n    _createClass(CompanycodesComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.generateForm = this.fb.group({\n          'comp': ['', [Validators.required]]\n        });\n      }\n    }, {\n      key: \"getCompanies\",\n      value: function getCompanies() {\n        return this.afs.collection('companies', function (ref) {\n          return ref.where('offersinterview', '==', true);\n        }).snapshotChanges().pipe(map(function (actions) {\n          return actions.map(function (a) {\n            var data = a.payload.doc.data();\n            var id = a.payload.doc.id;\n            return Object.assign({\n              id: id\n            }, data);\n          });\n        }));\n      }\n    }, {\n      key: \"getCodes\",\n      value: function getCodes() {\n        return this.afs.collection('companycodes').valueChanges();\n      }\n    }, {\n      key: \"hasCode\",\n      value: function hasCode(company) {\n        if (_.find(this.codes, function (o) {\n          return o.company == company;\n        }) !== undefined) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }, {\n      key: \"getCompany\",\n      value: function getCompany(company) {\n        this.company = _.find(this.companies, {\n          'id': company\n        });\n      }\n    }, {\n      key: \"submit\",\n      value: function submit(data) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var randomstring, newCode;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // var randomstring = 'test';\n                  randomstring = data.comp.substring(0, 3) + _.random(1000, 9999);\n                  this.loading = true;\n                  newCode = {\n                    company: data.comp,\n                    companyname: this.company.name,\n                    code: randomstring\n                  };\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return this.afs.collection('companycodes').add(newCode);\n\n                case 6:\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](3);\n                  console.log(_context.t0);\n\n                case 11:\n                  this.loading = false;\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[3, 8]]);\n        }));\n      }\n    }]);\n\n    return CompanycodesComponent;\n  }();\n\n  CompanycodesComponent.ɵfac = function CompanycodesComponent_Factory(t) {\n    return new (t || CompanycodesComponent)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  CompanycodesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CompanycodesComponent,\n    selectors: [[\"app-companycodes\"]],\n    decls: 16,\n    vars: 7,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"field\"], [1, \"label\"], [1, \"control\", \"has-icons-left\"], [1, \"select\", \"is-primary\", \"is-large\", \"is-fullwidth\"], [\"formControlName\", \"comp\", 3, \"ngModelChange\"], [\"value\", \"-1\"], [3, \"value\", \"selected\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"icon\", \"is-small\", \"is-left\"], [1, \"far\", \"fa-building\"], [\"type\", \"submit\", 1, \"button\", \"is-fullwidth\", \"is-primary\", 3, \"ngClass\", \"disabled\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\", \"disabled\"]],\n    template: function CompanycodesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CompanycodesComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit(ctx.generateForm.value);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"V\\xE4lj f\\xF6retag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CompanycodesComponent_Template_select_ngModelChange_6_listener($event) {\n          return ctx.getCompany($event);\n        });\n        i0.ɵɵelementStart(7, \"option\", 6);\n        i0.ɵɵtext(8, \"V\\xE4lj f\\xF6retag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, CompanycodesComponent_option_9_Template, 2, 4, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelement(11, \"i\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"button\", 10);\n        i0.ɵɵtext(13, \"Generera\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵtemplate(15, CompanycodesComponent_ng_container_15_Template, 3, 2, \"ng-container\", 11);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.generateForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.companies);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.loading))(\"disabled\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.codes);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i3.NgForOf, i3.NgClass],\n    styles: [\"\"]\n  });\n  return CompanycodesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}